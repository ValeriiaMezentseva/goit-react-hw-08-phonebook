{"version":3,"file":"static/js/679.62fed6aa.chunk.js","mappings":"0TAiFA,EAnEqB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAkBF,EAAAA,EAAAA,IAAYG,EAAAA,IAE9BC,EAAc,SAAAC,GAChBR,GAASS,EAAAA,EAAAA,GAASD,GACrB,EAEKE,EAAgB,SAAAF,GAClB,IACIR,GAASW,EAAAA,EAAAA,IAAcH,IACvBI,EAAAA,OAAAA,QAAA,uDAGH,CAFC,MAAOC,GACLD,EAAAA,OAAAA,MAAA,uBACH,CACJ,EAEH,GAA4CE,EAAAA,EAAAA,UAAS,CAAC,GAAtD,eAAOC,EAAP,KAAuBC,EAAvB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAwB,CAAC,EAC/Bb,EAAgBc,SAAQ,SAACC,GACvBF,EAAsBE,EAAQC,KACwB,SAApDC,aAAaC,QAAb,mBAAiCH,EAAQC,KAC5C,IACDL,EAAkBE,EACnB,GAAE,CAACb,IAEJ,IAAMmB,EAAmB,SAACC,GACxB,IAAMC,GAAqB,UAAQX,GACnCW,EAAsBD,IAAcC,EAAsBD,GAC1DT,EAAkBU,GAClB,IAAMC,EAAkBD,EAAsBD,GAC9CzB,GAAS4B,EAAAA,EAAAA,IAAc,CAAEH,UAAAA,EAAWI,SAAUF,KAC9CL,aAAaQ,QAAb,mBAAiCL,GAAaE,EAAgBI,WAC/D,EAEC,OACI,gCACK1B,EAAgB2B,OAAS,GACtB,SAAC,KAAD,UACK3B,EAAgB4B,KAAI,gBAAGZ,EAAH,EAAGA,IAAKa,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,MAArB,OAC7B,SAACC,EAAA,EAAD,CAEEhB,IAAKA,EACLa,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPrB,eAAgBA,EAAeM,GAC/Bd,YAAaA,EACbG,cAAeA,EACfc,iBAAkBA,GARbH,EAFsB,OAerB,UAAC,KAAD,YACI,SAAC,KAAD,KACA,SAAC,KAAD,UAAgB,0CAG3BnB,IAAS,SAACoC,EAAA,EAAD,MAGrB,E,8BC3BD,EArCqB,WACnB,IAAMC,GAAepC,EAAAA,EAAAA,IAAYqC,EAAAA,IAC3B3B,GAAQV,EAAAA,EAAAA,IAAYsC,EAAAA,IACpBC,GAAYvC,EAAAA,EAAAA,IAAYwC,EAAAA,IACxBzC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBJ,GAAWC,EAAAA,EAAAA,MAYjB,OAPAgB,EAAAA,EAAAA,YAAU,WACHf,GACHF,GAAS4C,EAAAA,EAAAA,MAEZ,GAAE,CAAC5C,EAAUE,KAIZ,8BACiB,UAAdwC,GAA0B7B,GACzB,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAe,iBACf,SAAC,KAAD,WACE,SAAC,KAAD,CAAYgC,KAAK,SAASC,QAlBvB,WACb9C,GAAS+C,EAAAA,EAAAA,MACV,EAgBsDC,OAAQT,EAAnD,SAAkEA,EAAe,QAAU,qBAE5FA,IAAiB,SAACU,EAAA,EAAD,KAElB,SAACC,EAAD,IACCrC,IAAS,yBAAK,oDAVc,SAACsC,EAAA,EAAD,KAgBxC,C","sources":["components/Contacts/Contacts.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\n\nimport { deleteContact, addToFavorite } from 'redux/phonebook/operations';\nimport { selectModal, selectFilteredContacts } from 'redux/phonebook/selectors';\nimport { setModal } from 'redux/phonebook/sliceModal';\n\nimport Modal from 'components/Modal';\nimport ContactItem from 'components/ContactItem';\n\nimport { ContactList, NoContactsBox, NoContactsImg, NoContactsText } from './Contacts.styled';\n\n\nconst ContactsList = () => {\n    const dispatch = useDispatch();\n    const modal = useSelector(selectModal);\n    const filtredContacts = useSelector(selectFilteredContacts);\n\n    const editContact = id => {\n        dispatch(setModal(id));\n    }\n\n    const removeContact = id => {\n        try {\n            dispatch(deleteContact(id));\n            Notify.success(`Contact was successfully removed from your phonebook`);\n        } catch (error) {\n            Notify.error(`Something went wrong`);\n        }\n    };\n\n  const [favoriteStatus, setFavoriteStatus] = useState({});\n\n  useEffect(() => {\n    const initialFavoriteStatus = {};\n    filtredContacts.forEach((contact) => {\n      initialFavoriteStatus[contact._id] =\n        localStorage.getItem(`favorite_${contact._id}`) === 'true';\n    });\n    setFavoriteStatus(initialFavoriteStatus);\n  }, [filtredContacts]);\n\n  const handleHeartClick = (contactId) => {\n    const updatedFavoriteStatus = { ...favoriteStatus };\n    updatedFavoriteStatus[contactId] = !updatedFavoriteStatus[contactId];\n    setFavoriteStatus(updatedFavoriteStatus);\n    const updatedFavorite = updatedFavoriteStatus[contactId];\n    dispatch(addToFavorite({ contactId, favorite: updatedFavorite }));\n    localStorage.setItem(`favorite_${contactId}`, updatedFavorite.toString());\n  };\n    \n    return (\n        <>\n            {filtredContacts.length > 0 ? (\n                <ContactList>\n                    {filtredContacts.map(({ _id, name, email, phone }) => (\n            <ContactItem\n              key={_id}\n              _id={_id}\n              name={name}\n              email={email}\n              phone={phone}\n              favoriteStatus={favoriteStatus[_id]}\n              editContact={editContact}\n              removeContact={removeContact}\n              handleHeartClick={handleHeartClick}\n            />\n          ))}\n                </ContactList>\n            ) : (\n                    <NoContactsBox>\n                        <NoContactsImg />\n                        <NoContactsText>There are no contacts ðŸ¤·</NoContactsText>\n                    </NoContactsBox>\n            )}\n            {modal && <Modal />}\n        </>\n    );\n}; \n\nexport default ContactsList;","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { fetchContacts} from \"redux/phonebook/operations\";\nimport { toggleFilterAction } from \"redux/phonebook/sliceFilter\";\nimport { selectOpenFilter, selectError, selectOperation, selectModal} from 'redux/phonebook/selectors';\n\nimport ContactsList from \"components/Contacts/Contacts\";\nimport Filter from \"components/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\n\n\nimport { Section, ContactsTitle, ContactsWrapper, BtnWrapper, FormButton } from \"./Contacts.styled\";\n\n\nconst ContactsPage = () => {\n  const isOpenFilter = useSelector(selectOpenFilter);\n  const error = useSelector(selectError);\n  const operation = useSelector(selectOperation);\n  const modal = useSelector(selectModal);\n  const dispatch = useDispatch();\n  const toggle = () => {\n    dispatch(toggleFilterAction());\n  }\n\n  useEffect(() => {\n    if (!modal) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, modal]);\n\n\n  return (\n    <>\n      {operation === 'fetch' && !error ? <Loader /> : (\n        <Section>\n          <ContactsWrapper>\n            <ContactsTitle>My contacts</ContactsTitle>\n            <BtnWrapper>\n              <FormButton type=\"button\" onClick={toggle} isOpen={isOpenFilter}>{isOpenFilter ? 'Close' : 'Find a contact'}</FormButton>\n            </BtnWrapper>\n            {isOpenFilter && (<Filter />)}\n\n            <ContactsList />\n            {error && <div> Something went wrong! Please try again! </div>}\n          </ContactsWrapper>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage; "],"names":["dispatch","useDispatch","modal","useSelector","selectModal","filtredContacts","selectFilteredContacts","editContact","id","setModal","removeContact","deleteContact","Notify","error","useState","favoriteStatus","setFavoriteStatus","useEffect","initialFavoriteStatus","forEach","contact","_id","localStorage","getItem","handleHeartClick","contactId","updatedFavoriteStatus","updatedFavorite","addToFavorite","favorite","setItem","toString","length","map","name","email","phone","ContactItem","Modal","isOpenFilter","selectOpenFilter","selectError","operation","selectOperation","fetchContacts","type","onClick","toggleFilterAction","isOpen","Filter","Contacts","Loader"],"sourceRoot":""}