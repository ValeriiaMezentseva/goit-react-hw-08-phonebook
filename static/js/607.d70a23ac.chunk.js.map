{"version":3,"file":"static/js/607.d70a23ac.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","redux/phonebook/selectors.js","components/Form/Form.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Field, ErrorMessage, Form } from 'formik';\n\n\nexport const FormWrapper = styled.div`\ndisplay: flex;\nflex-direction: row;\ntext-align: center;\npadding: 12px;\nmargin: 0;\n/* margin-right: 30px; */\nbackground: #fff;\nborder-radius: 8px;\nbox-shadow: 0 2px 0 0 #ebeffb; \n`;\n\nexport const FormStyled = styled(Form)`\ndisplay: flex;\nwidth: 1000px;\njustify-content: space-between;\n@media screen and (max-width: 1080px) {\n   width: 600px;\n    flex-direction: column;\n  align-items: center;\n  }; \n@media screen and (max-width: 680px) {\n   width: 320px;\n   align-items: center;\n  }; \n\n`\nexport const FormBox = styled.div`\n display: flex; \n flex-direction: row;\n margin-left: 10px;\n text-align: start;\n width: 100%;\n @media screen and (max-width: 680px) {\n   flex-direction: column;\n   align-items: center;\n  }; \n`;\n\n\nexport const Label = styled.label`\n display: flex;\n flex-direction: column;\n width: 100%;\n font-weight: 500;\n :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const Input = styled(Field)`\nfont-size: 20px;\npadding: 5px 10px;\nmargin-top: 5px;\nmargin-right: 10px;\nborder: 2px solid #ccc;\nborder-radius: 5px;\noutline: none;\n:focus {\n    border-color: #4287f5;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  margin-top: 5px;\n  font-size: 14px;\n  color: red;\n`;\n\nexport const FormButton = styled.button`\nborder: 1px solid #02bfae;\ntext-align: center;\npadding: 10px 20px;\nmargin: 15px; \nfont-size: 17px;\nfont-weight: 700;\nline-height: 27px;\nbackground: #5cc8bff9; \nborder-radius: 4px;\nbox-shadow: rgba(46, 191, 240, 0.4) 2px 2px;\nwhite-space: nowrap;\noverflow: hidden;\ncolor: white;\ntext-overflow: ellipsis;\ntransition: background-color .2s ease;\n outline: none;\n cursor: pointer;\n:hover {\n  box-shadow: #2c6cbb97 0 -25px 18px -14px inset,#79cfefb3 0 1px 2px;\n  transform: scale(1.05);\n}\n:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const Title = styled.h1`\npadding: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\ncolor: #013370ec;\nfont-size: 20px;\nmargin: 0;\nmin-height: 30px;\nborder-radius: 8px 8px 0 0;\nwidth: 1000px;\nbackground-image: linear-gradient(-45deg,#a8e1ee,#c6eaec);\nbackground-image: linear-gradient(-45deg,#d7eef1,rgba(182, 235, 249, 0.989));\n@media screen and (max-width: 1080px) {\n   width: 600px;\n   margin: 0;\n  }; \n\n @media screen and (max-width: 680px) {\nmin-height: 50px;\nwidth: 320px; \nalign-items: center;\n  };\n`;\n\nexport const ButtonBox = styled.div`\ndisplay: flex;\njustify-content: center;\nheight: 80px;\n`","export const selectContacts = state => state.contacts.items; \nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value; \nexport const selectOpenFilter = state => state.filter.isOpen; \nexport const selectOperation = state => state.contacts.operation; ","import { Formik} from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix';\nimport { Loader } from 'components/Loader/Loader';\nimport { FormWrapper, FormBox, Label, Input, Error, FormButton, Title, FormStyled, ButtonBox  } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectOpenFilter , selectOperation} from 'redux/phonebook/selectors';\nimport { toggleFilterAction } from \"redux/phonebook/sliceFilter\";\nimport { addContact } from 'redux/phonebook/operations';\n\nconst namePattern = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst numberPattern = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n    name: yup.string().matches(namePattern, \"Name is not valid\").required(),\n    number: yup.string().min(6).max(24).matches(numberPattern, 'Phone number is not valid').required(),\n});\n\nconst initialValues = {\n    id: '',\n    name: '',\n    number: '',\n}; \n\nconst ContactsForm = () => {\n\n    const contacts = useSelector(selectContacts); \n    const operation = useSelector(selectOperation);\n    const isOpenFilter = useSelector(selectOpenFilter);\n    const dispatch = useDispatch();  \n    const toggle = () => {\n    dispatch(toggleFilterAction());\n  }\n    const handleSubmit = (values, { resetForm }) => {  \n        const isIncluded = contacts.some(contact => contact.name.toLowerCase() === values.name.toLowerCase());\n        if (isIncluded) {\n            Notify.failure(`${values.name} is already in your contacts`)\n            return;\n        }\n        values.id = nanoid(10);\n\n        const newContact = {\n            id: 'id' + nanoid(),\n            name: values.name,\n            number: values.number,\n        };\n        try {\n            dispatch(addContact(newContact));\n            Notify.success(`${values.name} was successfully added to  your contacts`);\n            resetForm();\n        } catch (error) {\n            Notify.failure(`Something went wrong`);\n        };\n\n     }\n    return (\n        <>\n        <Title>Add a new contact</Title>\n         <Formik\n             initialValues={initialValues}\n             validationSchema={schema}\n             onSubmit={handleSubmit}\n            >\n            <FormWrapper>\n                 <FormStyled autoComplete=\"off\">\n                     <FormBox>\n                <Label htmlFor='name'>\n                     Name\n                     <Input\n                         id='name'\n                         type=\"text\"\n                         name='name'\n                         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                     />\n                     <Error name='name' component='div' />\n                 </Label>\n                <Label htmlFor='number'>\n                    Number\n                     <Input\n                         id='number'\n                         type=\"tel\"\n                         name='number'\n                         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                     />\n                     <Error name='number' component='div' /> \n                         </Label>\n                    </FormBox>\n                    <ButtonBox>\n                        <FormButton type=\"submit\"> {operation === 'add' ? <Loader /> : 'Add contact'} </FormButton> \n                        <FormButton type=\"button\" onClick={toggle} isOpen={isOpenFilter}>{isOpenFilter ? 'Close filter' : 'Search'}</FormButton>\n                    </ButtonBox>\n                 </FormStyled>\n                 </FormWrapper>\n            </Formik>\n            </>\n     )\n\n       \n };\n    \nexport default ContactsForm;","import styled from \"@emotion/styled\";\nimport { FaUserCircle } from 'react-icons/fa';\n\n\n\nexport const UserIcon = styled(FaUserCircle)`\npadding: 3px;\nborder: 1px solid black;\nborder-radius: 50%;\nmargin-right: 10px;\nfill: #5cc8bffb;\nfont-size: 20px;\n`\n\nexport const ItemUser = styled.li`\ndisplay: flex;\njustify-content: space-between;\nwidth: 100%; \nalign-items: center;\n:not(:last-child) {\n    margin-bottom: 20px;\n    }\n    :hover {\n    color: #4287f5; \n    border-color: #4287f5;\n  }\n`\n\nexport const ContactList = styled.ul` \npadding: 15px;\nalign-items: start;\n width: 100%;\n border-radius: 8px;\n background-color: white; \n margin: 0;\n     @media screen and (max-width: 680px) {\n        display: grid;\n        justify-content: center; \n\n\n  };\n`\n\nexport const ContactsButton = styled.button`\nwidth: 46px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #242323;\n  font-size: 36px;\n  border-radius: 5px;\n  border: 2px solid #5cc8bf8a;\n  background-color: transparent;\n  transition: all 100ms linear;\n  cursor: pointer;\n  :hover {\n    color: red;\n    border-color: red;\n  }\n     @media screen and (max-width: 680px) {\nwidth: 42px; \nheight: 42px; \njustify-content: space-between;\n  };\n`;\n\nexport const ContactsTitle = styled.h2`\n padding: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\ncolor: #013370ec;\nfont-size: 20px;\nmargin: 0;\nmin-height: 30px;\nborder-radius: 8px 8px 0 0;\nwidth: 1010px;\nbackground-image: linear-gradient(-45deg,#a8e1ee,#c6eaec);\nbackground-image: linear-gradient(-45deg,#d7eef1,rgba(182, 235, 249, 0.989));\n@media screen and (max-width: 1080px) {\n   width: 600px;\n   margin: 0;\n  }; \n   @media screen and (max-width: 680px) {\nmin-height: 50px;\nwidth: 320px; \nalign-items: center;\n  };\n\n`;\n\n\nexport const ContactsContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth: 1000px; \nmargin-top: 30px;\n@media screen and (max-width: 1080px) {\n   width: 600px;\n  align-items: center;\n  }; \n@media screen and (max-width: 680px) {\n   width: 320px;\n   align-items: center;\n  }; \n`;\n\nexport const ContactLabel = styled.div`\n  display: flex;\n  padding: 10px;\n  width: 100%; \n    text-align: start; \n  justify-content: flex-start;\n  align-items: center;\n   border-radius: 5px;\n    border: 2px solid #5cc8bf8a;;\n    height: 30px;\n    margin-right: 10px;\n`; \n\nexport const NameText = styled.div`\n  display: flex;\n  padding: 16px;\n  justify-content: space-around;\n   align-items: flex-start; \n   border-radius: 10px;\n   margin-bottom: 5px;\n      background-color: #5cc8bf8a; \n`\n\nexport const TextSpan = styled.span`\n  font-weight: 700;\n  align-items: flex-start;\n\n`","import { TiDeleteOutline } from 'react-icons/ti';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/phonebook/operations';\nimport { useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { LoaderSpinner } from 'components/Loader/Loader';\nimport { selectContacts, selectFilter, selectOperation } from 'redux/phonebook/selectors';\nimport { ItemUser, UserIcon, ContactList, ContactsButton, ContactsTitle, ContactsContainer, ContactLabel, TextSpan, NameText } from './Contacts.styled';\n\n\nconst ContactsList = () => {\n    const dispatch = useDispatch();\n    \n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const operation = useSelector(selectOperation); \n    \n    const removeContact = id => {\n        try {\n            dispatch(deleteContact(id));\n            Notify.success(`Contact was successfully removed from your phonebook`);\n        } catch (error) {\n            Notify.error(`Something went wrong`);\n    }\n    };\n    \n const getFilteredContacts = () => {\n    const normilizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedFilter)\n    );\n  };\n    const filtredContacts = getFilteredContacts();\n    \n\n    return (\n        <ContactsContainer>\n            <ContactsTitle> My contacts </ContactsTitle>\n            {filtredContacts.length > 0 ? (\n                <ContactList>\n                    <NameText>\n                    <TextSpan> Name: </TextSpan>\n                        <TextSpan>Phone number: </TextSpan>\n                        </NameText>\n                    {filtredContacts.map(({ id, name, number }) => (\n                        <ItemUser key={id}>\n                            <ContactLabel>   <UserIcon /> {name} </ContactLabel>\n                            <ContactLabel>{number} </ContactLabel>\n                            <ContactsButton onClick={() => removeContact(id)}>\n                                {operation === id ? <LoaderSpinner /> : <TiDeleteOutline />}</ContactsButton>\n                        </ItemUser>\n                    ))}\n                </ContactList>\n            ) : (<p > There is no contacts 🤷 </p>)}\n        </ContactsContainer>\n    );\n};\n\nexport default ContactsList; ","import styled from \"@emotion/styled\";\nimport { FiSearch } from 'react-icons/fi';\n\nexport const Icon = styled(FiSearch)`\nfont-size: 18px; \nmargin: 0;\npadding: 10px;\ncolor: #5cc8bf;\nalign-items: center;\n`\n\nexport const FilterWrapper = styled.div`\n  text-align: start;\n  margin-top: 20px;\nbackground: #fff;\nborder-radius: 8px;\nbox-shadow: 0 2px 0 0 #ebeffb; \n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\nalign-items: center;\n   @media screen and (max-width: 680px) {\nwidth: 320px; \n  };\n`\n\nexport const Title = styled.h2`\npadding: 10px;\ndisplay: flex;\nalign-items: flex-start;\nflex-direction: column;\njustify-content: center;\ncolor: #013370ec;\nfont-size: 20px;\nmargin: 0;\nmin-height: 30px;\nborder-radius: 8px 8px 0 0;\nwidth: 1000px;\nbackground-image: linear-gradient(-45deg,#a8e1ee,#c6eaec);\nbackground-image: linear-gradient(-45deg,#d7eef1,rgba(182, 235, 249, 0.989));\n@media screen and (max-width: 1080px) {\n   width: 600px;\n   margin: 0;\n  }; \n\n @media screen and (max-width: 680px) {\nmin-height: 50px;\nwidth: 320px; \nalign-items: center;\n  };\n`;\n\nexport const Input = styled.input`\nfont-size: 20px;\npadding: 5px 10px;\nmargin-bottom: 10px;\nmargin-top: 10px;\nmargin-right: 10px;\nborder: 2px solid #ccc;\nborder-radius: 5px;\noutline: none;\nwidth: 320px; \n:focus {\n    border-color: #4287f5;\n  }\n   @media screen and (max-width: 680px) {\nwidth: 100%; \n  };\n`;","import { selectFilter } from 'redux/phonebook/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterWrapper, Title, Input, Icon, InputWrapper } from './Filter.styled';\nimport { setFilter } from 'redux/phonebook/sliceFilter';\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    const onChangeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value))\n  }; \n    return (\n        <FilterWrapper>\n            <Title>Find a contact by name </Title>\n            <InputWrapper>\n                <Icon /> <Input onChange={onChangeFilter} name=\"filter\" type=\"text\" value={filter}></Input>\n                </InputWrapper>\n        </FilterWrapper>\n    )\n};\n\nexport default Filter; ","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\ndisplay: flex;\nflex-grow: 1;\nflex-basis: 0;\nflex-direction: column; \nalign-items: flex-start;\npadding: 30px; \nborder-radius: 5px;\nmargin: 5px;\n@media screen and (max-width: 1080px) {\n  align-items: center;\n  }\n`;\n\n\nexport const Title = styled.h1`\ntext-align: center;\n`;","import ContactsForm from \"components/Form/Form\";\nimport ContactsList from \"components/Contacts/Contacts\";\nimport Filter from \"components/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Container, Title } from \"./Contacts.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/phonebook/operations\";\nimport { useEffect } from \"react\";\nimport { selectOpenFilter, selectError, selectOperation} from 'redux/phonebook/selectors';\nimport { Helmet } from \"react-helmet\";\n\n\nconst ContactsPage = () => {\n    const isOpenFilter = useSelector(selectOpenFilter);\n    const error = useSelector(selectError);\n    const operation = useSelector(selectOperation);\n    const dispatch = useDispatch(); \n\n      useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n    return (\n        <Container>\n           <Helmet>\n        <Title> My Contacts </Title>\n            </Helmet>\n            <ContactsForm />\n            {isOpenFilter && (<Filter />)}\n            {operation === 'fetch' && !error ? <Loader /> : <ContactsList />}\n            {error && <div> Something went wrong! Please try again! </div>}\n        </Container>\n\n    )\n};\n\nexport default ContactsPage; "],"names":["FormWrapper","styled","FormStyled","Form","FormBox","Label","Input","Field","Error","ErrorMessage","FormButton","Title","ButtonBox","selectContacts","state","contacts","items","selectError","error","selectFilter","filter","value","selectOpenFilter","isOpen","selectOperation","operation","schema","yup","shape","name","matches","required","number","min","max","initialValues","id","useSelector","isOpenFilter","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","some","contact","toLowerCase","Notify","nanoid","newContact","addContact","autoComplete","htmlFor","type","title","component","Loader","onClick","toggleFilterAction","UserIcon","FaUserCircle","ItemUser","ContactList","ContactsButton","ContactsTitle","ContactsContainer","ContactLabel","NameText","TextSpan","filtredContacts","normilizedFilter","includes","getFilteredContacts","length","map","deleteContact","removeContact","Icon","FiSearch","FilterWrapper","InputWrapper","onChange","e","setFilter","currentTarget","Container","useEffect","fetchContacts","Helmet","Contacts"],"sourceRoot":""}