{"version":3,"file":"static/js/404.4c58427e.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","redux/phonebook/selectors.js","components/Form/Form.jsx","components/EditModal/EditModal.styled.jsx","components/EditModal/EditModal.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Field, ErrorMessage, Form } from 'formik';\n\n\nexport const FormWrapper = styled.div`\ndisplay: flex;\nflex-direction: row;\ntext-align: center;\npadding: 12px;\nmargin: 0;\nbackground: #fff;\nborder-radius: 8px;\nbox-shadow: 0 2px 0 0 #ebeffb; \n`;\n\nexport const FormStyled = styled(Form)`\ndisplay: flex;\nflex-direction: column;\ngap: 24px;\npadding: 20px;\nmargin: 0 auto;\nwidth: 99%;\nbackground-color: #fefefe;\nbox-shadow: 0px 8px 12px -4px rgba(50, 88, 130, 0.32);\nborder-radius: 15px;\n    @media screen and (min-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (min-width: 480px) {\n    width: 480px;\n  }\n`;\n\nexport const FormBox = styled.div`\n display: flex; \n flex-direction: column;\n margin-left: 10px;\n text-align: start;\n @media screen and (max-width: 768px) {\n   align-items: center;\n  }; \n`;\n\n\nexport const Label = styled.label`\n display: flex;\n flex-direction: column;\n width: 100%;\n font-weight: 500;\n :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\nexport const Input = styled(Field)`\nfont-size: 20px;\npadding: 5px 10px;\nmargin-top: 5px;\nmargin-right: 10px;\nborder: 2px solid #ccc;\nborder-radius: 5px;\noutline: none;\n:focus {\n    border-color: #4287f5;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  margin-top: 5px;\n  font-size: 14px;\n  color: red;\n`;\n\nexport const FormButton = styled.button`\nborder: 1px solid #02bfae;\ntext-align: center;\npadding: 10px 20px;\nmargin: 15px; \nfont-size: 17px;\nfont-weight: 700;\nline-height: 27px;\nbackground: #5cc8bff9; \nborder-radius: 4px;\nbox-shadow: rgba(46, 191, 240, 0.4) 2px 2px;\nwhite-space: nowrap;\noverflow: hidden;\ncolor: white;\ntext-overflow: ellipsis;\ntransition: background-color .2s ease;\n outline: none;\n cursor: pointer;\n:hover {\n  box-shadow: #2c6cbb97 0 -25px 18px -14px inset,#79cfefb3 0 1px 2px;\n  transform: scale(1.05);\n}\n:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\n\nexport const ButtonBox = styled.div`\ndisplay: flex;\njustify-content: center;\nheight: 80px;\n`","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items; \nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value; \nexport const selectOpenFilter = state => state.filter.isOpen; \nexport const selectOperation = state => state.contacts.operation; \nexport const selectModal = state => state.modal.isModalOpen; \nexport const selectId = state => state.modal.id; \nexport const selectOpenForm = state => state.form.isOpen;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { Formik} from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix';\nimport { Loader } from 'components/Loader/Loader';\nimport {  FormWrapper, FormBox, Label, Input, Error, FormButton, FormStyled, ButtonBox  } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectOperation} from 'redux/phonebook/selectors';\n// import { toggleFilterAction } from \"redux/phonebook/sliceFilter\";\nimport { addContact } from 'redux/phonebook/operations';\n\nconst namePattern = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst numberPattern = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n    name: yup.string().matches(namePattern, \"Name is not valid\").required(),\n    number: yup.string().min(6).max(24).matches(numberPattern, 'Phone number is not valid').required(),\n});\n\nconst initialValues = {\n    id: '',\n    name: '',\n    number: '',\n}; \n\nconst ContactsForm = () => {\n\n    const contacts = useSelector(selectContacts); \n    const operation = useSelector(selectOperation);\n    // const isOpenFilter = useSelector(selectOpenFilter);\n    const dispatch = useDispatch();  \n//     const toggle = () => {\n//     dispatch(toggleFilterAction());\n//   }\n    const handleSubmit = (values, { resetForm }) => {  \n        const isIncluded = contacts.some(contact => contact.name.toLowerCase() === values.name.toLowerCase());\n        if (isIncluded) {\n            Notify.failure(`${values.name} is already in your contacts`)\n            return;\n        }\n        values.id = nanoid(10);\n\n        const newContact = {\n            id: 'id' + nanoid(),\n            name: values.name,\n            number: values.number,\n        };\n        try {\n            dispatch(addContact(newContact));\n            Notify.success(`${values.name} was successfully added to  your contacts`);\n            resetForm();\n        } catch (error) {\n            Notify.failure(`Something went wrong`);\n        };\n\n     }\n    return (\n         <Formik\n             initialValues={initialValues}\n             validationSchema={schema}\n             onSubmit={handleSubmit}\n            >\n            <FormWrapper>\n                 <FormStyled autoComplete=\"off\">\n                     <FormBox>\n                <Label htmlFor='name'>\n                     Name\n                     <Input\n                         id='name'\n                         type=\"text\"\n                         name='name'\n                         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                     />\n                     <Error name='name' component='div' />\n                 </Label>\n                <Label htmlFor='number'>\n                    Number\n                     <Input\n                         id='number'\n                         type=\"tel\"\n                         name='number'\n                         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                     />\n                     <Error name='number' component='div' /> \n                         </Label>\n                    </FormBox>\n                    <ButtonBox>\n                        <FormButton type=\"submit\"> {operation === 'add' ? <Loader /> : 'Add contact'} </FormButton> \n                    </ButtonBox>\n                 </FormStyled>\n                 </FormWrapper>\n            </Formik>\n     )\n\n       \n };\n    \nexport default ContactsForm;","import styled from \"@emotion/styled\";\nimport { Field, ErrorMessage, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\ndisplay: flex;\nflex-direction: column;\ngap: 24px;\npadding: 20px;\nmargin-right: 0; \nwidth: 99%;\nbackground-color: #fefefe;\nbox-shadow: 0px 8px 12px -4px rgba(50, 88, 130, 0.32);\nborder-radius: 15px;\n@media screen and (min-width: 768px) {\n    width: 540px;\n  };\n  @media screen and (max-width: 767px) {\n    width: 430px;\n  };\n    @media screen and (max-width: 479px) {\n    width: 260px;\n  };\n\n\n\n`; \n\nexport const FormBox = styled.div`\ndisplay: flex; \nmargin-left: 10px;\n flex-direction: column;\ntext-align: start;\n @media screen and (min-width: 768px) {\n   align-items: center;\n  }; \n`; \n\nexport const Label = styled.label`\n display: flex;\n flex-direction: column;\n width: 100%;\n font-weight: 500;\n :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Input = styled(Field)`\nfont-size: 20px;\npadding: 5px 10px;\nmargin-top: 5px;\nmargin-right: 10px;\nborder: 2px solid #ccc;\nborder-radius: 5px;\noutline: none;\n:focus {\n    border-color: #4287f5;\n  }   \n`;\n\nexport const Error = styled(ErrorMessage)`\nmargin-top: 5px;\nfont-size: 14px;\ncolor: red;\n`; \n\nexport const Button = styled.button`\nborder: 1px solid #02bfae;\ntext-align: center;\npadding: 10px 20px;\nmargin: 15px; \nfont-size: 17px;\nfont-weight: 700;\nline-height: 27px;\nbackground: #5cc8bff9; \nborder-radius: 4px;\nbox-shadow: rgba(46, 191, 240, 0.4) 2px 2px;\nwhite-space: nowrap;\noverflow: hidden;\ncolor: white;\ntext-overflow: ellipsis;\ntransition: background-color .2s ease;\n outline: none;\n cursor: pointer;\n:hover {\n  box-shadow: #2c6cbb97 0 -25px 18px -14px inset,#79cfefb3 0 1px 2px;\n  transform: scale(1.05);\n}\n:not(:last-child) {\n    margin-right: 10px;\n  } \n`; \n\n\n","import { Formik } from \"formik\";\nimport * as yup from 'yup'; \n// import { nanoid } from \"nanoid\";\nimport { Notify } from \"notiflix\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setModal } from \"redux/phonebook/sliceModal\";\nimport { editContact } from \"redux/phonebook/operations\";\nimport { selectContacts, selectId } from \"redux/phonebook/selectors\";\nimport { FormStyled, FormBox, Label, Input, Button, Error} from \"./EditModal.styled\";\n\n\nconst namePattern = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst numberPattern = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n    name: yup.string().matches(namePattern, \"Name is not valid\").required(),\n    number: yup.string().min(6).max(24).matches(numberPattern, 'Phone number is not valid').required(),\n});\n\n\nconst EditModal = () => {\n\n    const contacts = useSelector(selectContacts);\n    const contactId = useSelector(selectId);\n\n    const dispatch = useDispatch();\n    const contactData = contacts.find(({ id }) => id === contactId);\n    const { id, name, number } = contactData;\n    \n    const initialValues = {\n        name: name,\n        number: number,\n    };\n\n    const handleSubmit = values => {\n        const isIncluded = contacts.some(contact => contact.name.toLowerCase() === values.name.toLowerCase());\n        if (isIncluded) {\n            Notify.failure(`${values.name} is already in your contacts`)\n            return;\n        }\n\n        try {\n            dispatch(editContact({ id, contact: values }));\n             dispatch(setModal());\n             Notify.success(`Contact was successfully edited`);\n        }\n        catch (error) {\n             Notify.error(`Something went wrong`);\n        }\n    };\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n        >\n            <FormStyled autoComplete='off'>\n                <FormBox>\n                        <Label htmlFor='name'>\n                            Name\n                            <Input\n                                id='name'\n                                type='text'\n                                name='name'\n                                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            />\n                            <Error name='name' component='div' />\n                        </Label>\n                        <Label htmlFor='number'>\n                            Number\n                            <Input\n                                id='number'\n                                type='tel'\n                                name='number'\n                                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            />\n                            <Error name='number' component='div' />\n                        </Label>\n                    </FormBox>\n                    <Button type=\"submit\">Save changes</Button>\n                </FormStyled>\n        </Formik>\n    );\n};\n\nexport default EditModal;","import styled from \"@emotion/styled\";\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const CloseIcon = styled(AiOutlineClose)`\n    text-align: center;\n    color: white; \n    :hover {\n  color: red;\n  }\n`\n\nexport const Backdrop = styled.div`\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\nbackground-color: rgba(0, 0, 0, 0.3);\n`; \n\nexport const ModalContainer = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\npadding: 24px;\npadding-top: 46px;\nwidth: 90%;\nbackground-color: #e7ecf2;\nbox-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14), 0px 2px 1px rgba(0, 0, 0, 0.2);\nborder-radius: 10px;\ntransform: translate(-50%, -50%) scale(1);\n@media screen and (min-width: 480px) {\n    padding: 36px;\n    padding-top: 54px;\n    width: 460px;\n}\n@media screen and (min-width: 768px) {\n    width: 582px;\n    }\n@media screen and (max-width: 479px) {\n    width: 300px;\n    }\n`; \n\nexport const CloseButton = styled.button`\ndisplay: block;\nposition: absolute; \nleft: 91%; \nbottom: 88%; \nfont-size: 25px;\nborder: 1px solid #02bfae;\ntext-align: center;\nbackground: #5cc8bff9; \nborder-radius: 4px;\nbox-shadow: rgba(46, 191, 240, 0.4) 2px 2px;\n:hover {\n  transform: scale(1.05);\n}\n@media screen and (max-width: 479px) {\n   left: 86%; \nbottom: 89%;\nfont-size: 20px;\n    }\n\n`\n","import { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport { setModal } from 'redux/phonebook/sliceModal';\nimport EditModal from 'components/EditModal';\nimport { Backdrop, ModalContainer, CloseButton, CloseIcon } from './Modal.styled';\n\n\n\nconst Modal = () => {\n    const dispatch = useDispatch();\n\n    const onBtnClick = () => {\n            dispatch(setModal());\n    };\n\n    return createPortal(\n        <Backdrop>\n            <ModalContainer>\n                <CloseButton type=\"button\" onClick={onBtnClick}><CloseIcon/></CloseButton>\n                <EditModal />\n            </ModalContainer>\n        </Backdrop>,\n        document.querySelector('#modal-root')\n    );\n}; \n\nexport default Modal; ","import styled from \"@emotion/styled\";\nimport { FaUserCircle } from 'react-icons/fa';\nimport { TiDeleteOutline } from 'react-icons/ti';\nimport { AiOutlinePhone } from 'react-icons/ai';\nimport { MdModeEditOutline } from 'react-icons/md'; \n\n\n\nexport const UserIcon = styled(FaUserCircle)`\npadding: 3px;\nborder: 1px solid black;\nborder-radius: 50%;\nmargin-right: 10px;\nfill: black; \nfont-size: 20px;\n`; \nexport const PhoneIcon = styled(AiOutlinePhone)`\npadding: 3px;\nborder: 1px solid black;\nborder-radius: 50%;\nmargin-right: 10px;\nfill: black; \nfont-size: 20px;\n`;\n\nexport const EditIcon = styled(MdModeEditOutline)`\nfill: black; \nfont-size: 24px;\nborder-radius: 5px;\npadding: 5px;\nborder: 2px solid #5cc8bf8a;\n:hover {\n  fill: green;\n  border-color: green;\n  }\n`\n\nexport const DeleteIcon = styled(TiDeleteOutline)`\nfill: black; \nfont-size: 24px;\nborder-radius: 5px;\npadding: 5px;\nborder: 2px solid #5cc8bf8a;\n:hover {\n  fill: red;\n  border-color: red;\n  }\n`; \n\nexport const ButtonWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\ngap: 5px;\n`\n\n\nexport const ContactList = styled.ul` \n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 5px;\n  margin: 5px;\n`;\n\nexport const ItemUser = styled.li` \ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\npadding: 10px;\nfont-size: 24px;\nborder: 1px solid rgb(200, 200, 200);\nborder-radius: 10px;\ncursor: pointer;\ntransition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover,\n&:focus {\n  border-color:#5cc8bf8a;\n  }\n`;\n\nexport const ContactWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\ngap: 12px;\n@media screen and (max-width: 479px) {\n  font-size: 20px;\n  }\n`\n\nexport const ContactLabel = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 12px;\n`; \n\nexport const ContactsButton = styled.button`\n  padding: 0;\n  align-items: center;\n  border: none; \n  justify-content: center;\n  background-color: transparent;\n  transition: all 100ms linear;\n  cursor: pointer;\n`;\n\nexport const EmptyText = styled.div `\npadding: 10px;\ntext-align: center;\n`\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/phonebook/operations';\nimport { setModal } from 'redux/phonebook/sliceModal';\nimport Modal from 'components/Modal';\nimport { useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { LoaderSpinner } from 'components/Loader/Loader';\nimport { selectOperation, selectModal, selectFilteredContacts } from 'redux/phonebook/selectors';\nimport { ItemUser, UserIcon, ContactList, ContactsButton, ContactLabel, DeleteIcon, PhoneIcon, EditIcon, ContactWrapper, ButtonWrapper, EmptyText } from './Contacts.styled';\n\n\nconst ContactsList = () => {\n    const dispatch = useDispatch();\n    \n    // const contacts = useSelector(selectContacts);\n    // const filter = useSelector(selectFilter);\n    const operation = useSelector(selectOperation); \n    const modal = useSelector(selectModal); \n    const filtredContacts = useSelector(selectFilteredContacts);\n\n    const editContact = id => {\n        dispatch(setModal(id)); \n    }\n\n    \n    const removeContact = id => {\n        try {\n            dispatch(deleteContact(id));\n            Notify.success(`Contact was successfully removed from your phonebook`);\n        } catch (error) {\n            Notify.error(`Something went wrong`);\n        }\n    };\n\n//  const getFilteredContacts = () => {\n//     const normilizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normilizedFilter)\n//     );\n//   };\n    // const filtredContacts = getFilteredContacts();\n    \n\n    return (\n        <>\n            {filtredContacts.length > 0 ? (\n                <ContactList>\n                    {filtredContacts.map(({ id, name, number }) => (\n                        <ItemUser key={id}>\n                            <ContactWrapper>\n                                <ContactLabel>\n                                    <UserIcon />\n                                    <span>{name}</span>\n                                </ContactLabel>\n                                <ContactLabel>\n                                    <PhoneIcon />\n                                    <span>{number}</span>\n                                </ContactLabel>\n                            </ContactWrapper>\n                            <ButtonWrapper>\n                                <ContactsButton type='button' onClick={() => editContact(id)}>\n                                    <EditIcon />\n                                </ContactsButton>\n                                <ContactsButton type='button' onClick={() => removeContact(id)}>\n                                    {operation === id ? <LoaderSpinner /> : <DeleteIcon />}\n                                </ContactsButton>\n                            </ButtonWrapper>\n                        </ItemUser>\n                    ))}\n                </ContactList>\n            ) : (<EmptyText > There is no contacts 🤷 </EmptyText>)}\n            {modal && <Modal />}\n            </>\n    );\n};\n\nexport default ContactsList; ","import styled from \"@emotion/styled\";\nimport { FiSearch } from 'react-icons/fi';\n\nexport const Icon = styled(FiSearch)`\nfont-size: 18px; \nmargin: 0;\npadding: 10px;\ncolor: #5cc8bf;\nalign-items: center;\n`\n\nexport const FilterWrapper = styled.div`\n  text-align: start;\nbackground: #fff;\nborder-radius: 8px;\nbox-shadow: 0 2px 0 0 #ebeffb; \n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\nalign-items: center;\n   @media screen and (max-width: 680px) {\nwidth: 320px; \n  };\n`\n\nexport const Input = styled.input`\nfont-size: 20px;\npadding: 5px 10px;\nmargin-bottom: 10px;\nmargin-top: 10px;\nmargin-right: 10px;\nborder: 2px solid #ccc;\nborder-radius: 5px;\noutline: none;\nwidth: 320px; \n:focus {\n    border-color: #4287f5;\n  }\n   @media screen and (max-width: 680px) {\nwidth: 100%; \n  };\n`;","import { selectFilter } from 'redux/phonebook/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterWrapper, Input, Icon, InputWrapper } from './Filter.styled';\nimport { setFilter } from 'redux/phonebook/sliceFilter';\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    const onChangeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value))\n  }; \n    return (\n        <FilterWrapper>\n            <InputWrapper>\n                <Icon /> <Input onChange={onChangeFilter} name=\"filter\" type=\"text\" placeholder='Find a contact by name' value={filter}></Input>\n                </InputWrapper>\n        </FilterWrapper>\n    )\n};\n\nexport default Filter; ","import styled from \"@emotion/styled\";\n\nexport const Section = styled.div`\n padding: 36px 0;\n/* display: flex;\nflex-grow: 1;\nflex-basis: 0;\nflex-direction: column; \nalign-items: flex-start;\npadding: 30px; \nborder-radius: 5px;\nmargin: 5px;\n@media screen and (max-width: 1080px) {\n  align-items: center;\n  } */\n`;\n\nexport const ContactsContainer = styled.div`\n  /* padding-left: 20px;\n  padding-right: 20px; */\n  margin-left: auto;\n  margin-right: auto;\n    @media screen and (min-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (min-width: 480px) {\n    width: 480px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n\nexport const ContactsTitle = styled.h2`\n padding: 10px;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\ncolor: #013370ec;\nfont-size: 20px;\nmargin: 0;\nmin-height: 40px;\nborder-radius: 8px 8px 0 0;\nbackground-image: linear-gradient(-45deg,#a8e1ee,#c6eaec);\nbackground-image: linear-gradient(-45deg,#d7eef1,rgba(182, 235, 249, 0.989));\n@media screen and (max-width: 1080px) {\n   margin: 0;\n  }; \n   @media screen and (max-width: 767px) {\nmin-height: 50px;\nalign-items: center;\n  };\n`;\n\nexport const ContactsWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n/* padding: 20px; */\nmargin: 0 auto;\nwidth: 99%;\nbackground-color: #fefefe;\nborder-radius: 15px;\n@media screen and (min-width: 768px) {\n  width: 600px;\n  }\n`; \n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: start;\n`\n\nexport const FormButton = styled.button`\nborder: 1px solid #02bfae;\ntext-align: center;\npadding: 10px 20px;\nmargin-left: 10px;\nfont-size: 17px;\nfont-weight: 700;\nline-height: 27px;\nbackground: #5cc8bff9; \nborder-radius: 4px;\nbox-shadow: rgba(46, 191, 240, 0.4) 2px 2px;\nwhite-space: nowrap;\noverflow: hidden;\ncolor: white;\ntext-overflow: ellipsis;\ntransition: background-color .2s ease;\n outline: none;\n cursor: pointer;\n:hover {\n  box-shadow: #2c6cbb97 0 -25px 18px -14px inset,#79cfefb3 0 1px 2px;\n  transform: scale(1.05);\n}\n  \n@media screen and (max-width: 479px) {\n  font-size: 14px;\n  padding: 5px 10px;\n  };\n`;\n\n\n","import ContactsForm from \"components/Form/Form\";\nimport ContactsList from \"components/Contacts/Contacts\";\nimport Filter from \"components/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Section, ContactsContainer, ContactsTitle, ContactsWrapper, BtnWrapper, FormButton } from \"./Contacts.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchContacts} from \"redux/phonebook/operations\";\nimport { useEffect } from \"react\";\nimport { toggleFilterAction } from \"redux/phonebook/sliceFilter\";\nimport { selectOpenFilter, selectError, selectOperation, selectModal, selectOpenForm} from 'redux/phonebook/selectors';\nimport { toggleFormAction } from \"redux/phonebook/sliceForm\";\n\n\nconst ContactsPage = () => {\n  const isOpenFilter = useSelector(selectOpenFilter);\n  const error = useSelector(selectError);\n  const operation = useSelector(selectOperation);\n  const modal = useSelector(selectModal);\n  const isOpenForm = useSelector(selectOpenForm);\n  const dispatch = useDispatch(); \n     const toggle = () => {\n    dispatch(toggleFilterAction());\n     }\n\n  const toggleForm = () => {\n    dispatch(toggleFormAction());\n  }\n\n  useEffect(() => {\n    if (!modal) {\n       dispatch(fetchContacts());\n    }\n  }, [dispatch, modal]);\n\n\n  return (\n      <Section>\n        <ContactsContainer>\n          <ContactsWrapper>\n            <ContactsTitle>My contacts list</ContactsTitle>\n            <BtnWrapper>\n            <FormButton type=\"button\" onClick={toggle} isOpen={isOpenFilter}>{isOpenFilter ? 'Close' : 'Search'}</FormButton>\n              <FormButton type='button'onClick={toggleForm} isOpen={isOpenForm}>{isOpenForm ? 'Close' : 'Add new contact'}</FormButton>\n              </BtnWrapper>\n            {isOpenFilter && (<Filter />)}\n          {isOpenForm && (<ContactsForm />)}\n            {operation === 'fetch' && !error ? <Loader /> : <ContactsList />}\n            {error && <div> Something went wrong! Please try again! </div>}\n            </ContactsWrapper>\n          </ContactsContainer>\n        </Section>\n\n    )\n};\n\nexport default ContactsPage; "],"names":["FormWrapper","styled","FormStyled","Form","FormBox","Label","Input","Field","Error","ErrorMessage","FormButton","ButtonBox","selectContacts","state","contacts","items","selectError","error","selectFilter","filter","value","selectOpenFilter","isOpen","selectOperation","operation","selectModal","modal","isModalOpen","selectId","id","selectOpenForm","form","selectFilteredContacts","createSelector","name","toLowerCase","includes","schema","yup","shape","matches","required","number","min","max","initialValues","useSelector","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","some","contact","Notify","nanoid","newContact","addContact","autoComplete","htmlFor","type","title","component","Loader","Button","contactId","contactData","find","editContact","setModal","CloseIcon","AiOutlineClose","Backdrop","ModalContainer","CloseButton","createPortal","onClick","document","querySelector","UserIcon","FaUserCircle","PhoneIcon","AiOutlinePhone","EditIcon","MdModeEditOutline","DeleteIcon","TiDeleteOutline","ButtonWrapper","ContactList","ItemUser","ContactWrapper","ContactLabel","ContactsButton","EmptyText","filtredContacts","length","map","deleteContact","removeContact","Icon","FiSearch","FilterWrapper","InputWrapper","onChange","e","setFilter","currentTarget","placeholder","Section","ContactsContainer","ContactsTitle","ContactsWrapper","BtnWrapper","isOpenFilter","isOpenForm","useEffect","fetchContacts","toggleFilterAction","toggleFormAction","Contacts"],"sourceRoot":""}