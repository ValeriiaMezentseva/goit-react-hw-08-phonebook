{"version":3,"file":"static/js/245.24a26efe.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/CreateContact/CreateContact.jsx","redux/phonebook/selectors.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Field, ErrorMessage, Form } from 'formik';\n\nexport const FormWrapper = styled.div`\ndisplay: flex; \nflex-direction: column;\n width: calc( 100% - 30px);\n max-width: 1200px;\ntext-align: center;\nalign-items: center;\nmargin-top: 45px; \nmargin-bottom: 30px;\nbackground: rgba(255, 255, 255, 0.4);\nborder-radius: 30px;\npadding: 75px 0; \n\n    @media screen and (min-width: 1016px) {\n   flex-direction: row;\n  } \n`;\n\nexport const Title = styled.h2`\nmargin: 0;\npadding: 0;\nfont-weight: 600;\n color: ${props => props.theme.colors.primaryDarkText};\nfont-family: ${props => props.theme.fonts.primary};\nfont-size: 26px;\n`\nexport const FormContainer = styled.div`\n    margin-left: 35px;\n    margin-right: 35px;\n    width: 50%;\n   @media screen and (max-width: 1015px) {\n  width: 80%; \n  };\n`;\n\nexport const ImageContainer = styled.div`\nflex: 1;\n`;\n\nexport const FormStyled = styled(Form)`\ngap: 20px;\nwidth: 100%;\nmargin: 0 auto;\nbackground-color: transparent;\n`;\n\nexport const FormBox = styled.div`\n display: flex; \n flex-direction: column;\n margin-left: 10px;\n margin-top: 18px;\n margin-bottom: 10px;\n text-align: start;\n`;\n\nexport const Image = styled.img`\nwidth: 340px;\nbackground-color: transparent;\n  @media screen and (max-width: 768px) {\n    margin-top: 20px;\n  }\n    @media screen and (max-width: 479px) {\n   width: 190px;\n  }\n`;\n\n\nexport const Label = styled.label`\nfont-family: ${props => props.theme.fonts.primary};\n display: flex;\n flex-direction: column;\n font-weight: 500;\n color: ${props => props.theme.colors.primaryDarkText};\n      @media screen and (min-width: 768px) {\n      font-size: 20px;\n  }\n :not(:last-child) {\n    margin-bottom: 20px;\n\n  }\n`;\n\nexport const Input = styled(Field)`\nfont-family: ${props => props.theme.fonts.primary};\nfont-size: 20px;\npadding: 10px 15px;\nmargin-top: 5px;\nmargin-right: 10px;\n background: transparent;\n  color: ${props => props.theme.colors.primaryDarkText};\nborder: 2px solid #ccc;\nborder-radius: 5px;\noutline: none;\n@media screen and (min-width: 1016px) {\n  padding: 15px 20px;\n  }\n:focus {\n    border-color: ${props => props.theme.colors.normalDark};\n    transform: scale(1.05);\n  }\n    &:hover {\n    border-color: ${props => props.theme.colors.normalDark};\n    \n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  margin-top: 5px;\n  font-size: 14px;\n  color: red;\n`;\n\nexport const FormButton = styled.button`\ndisplay: flex; \nalign-items: flex-start;\n  font-family: ${props => props.theme.fonts.primary};\n  border: none;\n  padding: 10px 20px;\n  font-size: 20px;\n  font-weight: 500;\n  background-color: ${props => props.theme.colors.normalDark};\n  border-radius: 4px;\n  box-shadow: ${props => props.theme.colors.lightBlue} 2px 2px;\n  white-space: nowrap;\n  overflow: hidden;\n  color: white;\n  text-overflow: ellipsis;\n  transition: background-color 0.2s ease;\n  outline: none;\n  cursor: pointer;\n  margin-bottom: 10px;\n\n  &:hover {\n    box-shadow: ${props => props.theme.colors.normalDark} 0 -25px 18px -14px inset, #79cfefb3 0 1px 2px;\n    transform: scale(1.05);\n  }\n`;\n\n\nexport const ButtonBox = styled.div`\ndisplay: flex;\njustify-content: flex-end;\nmargin-right: 10px;\nmargin-top: 30px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { selectContacts, selectOperation} from 'redux/phonebook/selectors';\nimport { addContact, fetchContacts } from 'redux/phonebook/operations';\n\nimport addContactPic from '../../pictures/contact.png';\n\nimport {  FormWrapper, Title, FormBox, Label, Input, Error, FormButton, FormStyled, ButtonBox, Image, ImageContainer, FormContainer  } from './Form.styled';\n\nconst namePattern = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst emailRegExp = /^\\w+([.-]?\\w+){2}@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst numberPattern = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n    name: yup.string().matches(namePattern, \"Name is not valid\").required(),\n    email: yup.string().matches(emailRegExp, 'Your email must be valid').lowercase().required(),\n    phone: yup.string().min(6).max(24).matches(numberPattern, 'Phone number is not valid').required(),\n});\n\nconst initialValues = {\n    name: '',\n    email: '',\n    phone: '',\n}; \n\nconst ContactsForm = () => {\n    const navigate = useNavigate();\n   \n\n    const contacts = useSelector(selectContacts);\n    const operation = useSelector(selectOperation);\n    const dispatch = useDispatch();\n    const handleSubmit = (values, { resetForm }) => {\n        const isIncluded = contacts.some(contact => contact.email.toLowerCase() === values.email.toLowerCase());\n        if (isIncluded) {\n            Notify.failure(`${values.email} is already in your contacts`)\n            return;\n        }\n\n        const newContact = {\n            name: values.name,\n            email: values.email,\n            phone: values.phone,\n        };\n    \n        try {\n            dispatch(addContact(newContact));\n            Notify.success(`${values.name} was successfully added to  your contacts`);\n            resetForm();\n            navigate('/contacts');\n            dispatch(fetchContacts());\n        } catch (error) {\n            Notify.failure(`Something went wrong`);\n        };\n\n\n    }\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n        >\n            <FormWrapper>\n                <FormContainer>\n                    \n                    <FormStyled autoComplete=\"off\">\n                        <Title>Create a contact</Title>\n                        <FormBox>\n                            <Label htmlFor='name'>\n                                Name\n                                <Input\n                                    id='name'\n                                    type=\"text\"\n                                    name='name'\n                                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                                />\n                                <Error name='name' component='div' />\n                            </Label>\n                            <Label htmlFor='email'>\n                                Email\n                                <Input\n                                    id='email'\n                                    type=\"text\"\n                                    name='email'\n                                    title=\"Please enter a valid email address\"\n                                />\n                                <Error name='email' component='div' />\n                            </Label>\n                            <Label htmlFor='phone'>\n                                Number\n                                <Input\n                                    id='phone'\n                                    type=\"tel\"\n                                    name='phone'\n                                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                                />\n                                <Error name='phone' component='div' />\n                            </Label>\n                        </FormBox>\n                        <ButtonBox>\n                            <FormButton type=\"submit\"> {operation === 'add' ? <Loader /> : 'Add contact'}  </FormButton>\n                        </ButtonBox>\n                    </FormStyled>\n                </FormContainer>\n                <ImageContainer>\n                    <Image src={addContactPic} alt='adding contact' />\n                </ImageContainer>\n            </FormWrapper>\n        </Formik>\n    );\n     \n};\n    \nexport default ContactsForm;","import React, { useState, useEffect } from \"react\";\nimport { Loader } from \"components/Loader/Loader\";\nimport ContactsForm from \"components/Form/Form\";\n\nconst CreateContactPage = () => {\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setIsLoading(false);\n        }, 200);\n    }, []);\n\n    return (\n        <>\n            {isLoading ? <Loader /> : <ContactsForm />}\n        </>\n    );\n}; \n\nexport default CreateContactPage;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items; \nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value; \nexport const selectOpenFilter = state => state.filter.isOpen; \nexport const selectOperation = state => state.contacts.operation; \nexport const selectModal = state => state.modal.isModalOpen; \nexport const selectId = state => state.modal.id; \nexport const selectOpenForm = state => state.form.isOpen;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!Array.isArray(contacts)) {\n      return [];\n    }\n    \n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);"],"names":["FormWrapper","styled","Title","props","theme","colors","primaryDarkText","fonts","primary","FormContainer","ImageContainer","FormStyled","Form","FormBox","Image","Label","Input","Field","normalDark","Error","ErrorMessage","FormButton","lightBlue","ButtonBox","schema","yup","shape","name","matches","required","email","lowercase","phone","min","max","initialValues","navigate","useNavigate","contacts","useSelector","selectContacts","operation","selectOperation","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","isIncluded","some","contact","toLowerCase","Notify","newContact","addContact","fetchContacts","error","autoComplete","htmlFor","id","type","title","component","Loader","src","addContactPic","alt","useState","isLoading","setIsLoading","useEffect","setTimeout","state","items","selectIsLoading","selectError","selectFilter","filter","value","selectOpenFilter","isOpen","selectModal","modal","isModalOpen","selectId","selectFilteredContacts","createSelector","Array","isArray","includes"],"sourceRoot":""}