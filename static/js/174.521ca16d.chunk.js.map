{"version":3,"file":"static/js/174.521ca16d.chunk.js","mappings":"0TAwFA,EAtEqB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAkBF,EAAAA,EAAAA,IAAYG,EAAAA,IAC9BC,EAAmBF,EAAgBG,QAAO,SAACC,GAAD,OAAaA,EAAQC,QAArB,IAI1CC,EAAc,SAACC,GACjBZ,GAASa,EAAAA,EAAAA,GAASD,GACrB,EAEKE,EAAgB,SAACF,GACnB,IACIZ,GAASe,EAAAA,EAAAA,IAAcH,IACvBI,EAAAA,OAAAA,QAAA,uDAGH,CAFC,MAAOC,GACLD,EAAAA,OAAAA,MAAA,uBACH,CACJ,EAED,GAA4CE,EAAAA,EAAAA,UAAS,CAAC,GAAtD,eAAOC,EAAP,KAAuBC,EAAvB,MAEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAwB,CAAC,EAC/BjB,EAAgBkB,SAAQ,SAACd,GACrBa,EAAsBb,EAAQe,KAC0B,SAApDC,aAAaC,QAAb,mBAAiCjB,EAAQe,KAChD,IACDJ,EAAkBE,EACrB,GAAE,CAACjB,IAEJ,IAAMsB,EAAmB,SAACC,GACtB,IAAMC,GAAqB,UAAQV,GACnCU,EAAsBD,IAAcC,EAAsBD,GAC1DR,EAAkBS,GAClB,IAAMC,EAAkBD,EAAsBD,GAC9C5B,GAAS+B,EAAAA,EAAAA,IAAc,CAAEH,UAAAA,EAAWlB,SAAUoB,KAC9CL,aAAaO,QAAb,mBAAiCJ,GAAaE,EAAgBG,WACjE,EAED,OACI,gCACK1B,EAAiB2B,OAAS,GACvB,SAAC,KAAD,UACK3B,EAAiB4B,KAAI,gBAAGX,EAAH,EAAGA,IAAKY,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,MAArB,OAClB,SAACC,EAAA,EAAD,CAEIf,IAAKA,EACLY,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPnB,eAAgBA,EAAeK,GAC/Bb,YAAaA,EACbG,cAAeA,EACfa,iBAAkBA,GARbH,EAFS,OAe1B,UAAC,KAAD,YACI,SAAC,KAAD,KACA,SAAC,KAAD,UAAgB,0CAGvBtB,IAAS,SAACsC,EAAA,EAAD,MAGrB,E,8BC7CD,EA9ByB,WACrB,IAAMC,GAAetC,EAAAA,EAAAA,IAAYuC,EAAAA,IAC3BzB,GAAQd,EAAAA,EAAAA,IAAYwC,EAAAA,IACpBC,GAAUzC,EAAAA,EAAAA,IAAY0C,EAAAA,IAEtB7C,GAAWC,EAAAA,EAAAA,MAKjB,OACI,8BACK2C,IAAY3B,GAAQ,SAAC6B,EAAA,EAAD,KACjB,SAAC,KAAD,WACI,UAAC,KAAD,YACI,SAAC,KAAD,UAAe,uBACf,SAAC,KAAD,WACI,SAAC,KAAD,CAAYC,KAAK,SAASC,QAXnC,WACXhD,GAASiD,EAAAA,EAAAA,MACZ,EASkEC,OAAQT,EAAnD,SAAkEA,EAAe,QAAU,qBAG9FA,IAAiB,SAACU,EAAA,EAAD,KAClB,SAAC,EAAD,IACClC,IAAS,yBAAK,oDAMtC,C","sources":["components/FavoriteList/FavoriteList.jsx","pages/Favorites/Favorites.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\n\nimport { deleteContact, addToFavorite} from 'redux/phonebook/operations';\nimport { selectModal, selectFilteredContacts } from 'redux/phonebook/selectors';\nimport { setModal } from 'redux/phonebook/sliceModal';\n\nimport ContactItem from 'components/ContactItem';\n\nimport Modal from 'components/Modal';\nimport {\n    ContactList,\n    NoContactsBox,\n    NoContactsImg,\n    NoContactsText\n} from '../Contacts/Contacts.styled'; \n\nconst FavoriteList = () => {\n    const dispatch = useDispatch();\n    const modal = useSelector(selectModal);\n    const filtredContacts = useSelector(selectFilteredContacts);\n    const favoriteContacts = filtredContacts.filter((contact) => contact.favorite);\n\n\n\n    const editContact = (id) => {\n        dispatch(setModal(id));\n    };\n\n    const removeContact = (id) => {\n        try {\n            dispatch(deleteContact(id));\n            Notify.success(`Contact was successfully removed from your phonebook`);\n        } catch (error) {\n            Notify.error(`Something went wrong`);\n        }\n    };\n\n    const [favoriteStatus, setFavoriteStatus] = useState({});\n\n    useEffect(() => {\n        const initialFavoriteStatus = {};\n        filtredContacts.forEach((contact) => {\n            initialFavoriteStatus[contact._id] =\n                localStorage.getItem(`favorite_${contact._id}`) === 'true';\n        });\n        setFavoriteStatus(initialFavoriteStatus);\n    }, [filtredContacts]);\n\n    const handleHeartClick = (contactId) => {\n        const updatedFavoriteStatus = { ...favoriteStatus };\n        updatedFavoriteStatus[contactId] = !updatedFavoriteStatus[contactId];\n        setFavoriteStatus(updatedFavoriteStatus);\n        const updatedFavorite = updatedFavoriteStatus[contactId];\n        dispatch(addToFavorite({ contactId, favorite: updatedFavorite }));\n        localStorage.setItem(`favorite_${contactId}`, updatedFavorite.toString());\n    };\n\n    return (\n        <>\n            {favoriteContacts.length > 0 ? (\n                <ContactList>\n                    {favoriteContacts.map(({ _id, name, email, phone }) => (\n                        <ContactItem\n                            key={_id}\n                            _id={_id}\n                            name={name}\n                            email={email}\n                            phone={phone}\n                            favoriteStatus={favoriteStatus[_id]}\n                            editContact={editContact}\n                            removeContact={removeContact}\n                            handleHeartClick={handleHeartClick}\n                        />\n                    ))}\n                </ContactList>\n            ) : (\n                <NoContactsBox>\n                    <NoContactsImg />\n                    <NoContactsText>There are no contacts ðŸ¤·</NoContactsText>\n                </NoContactsBox>\n            )}\n            {modal && <Modal />}\n        </>\n    );\n}; \n\nexport default FavoriteList;","import { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectOpenFilter, selectError, selectIsLoading} from 'redux/phonebook/selectors';\nimport { toggleFilterAction } from \"redux/phonebook/sliceFilter\";\n\nimport FavoriteList from 'components/FavoriteList';\nimport Filter from \"components/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\n\nimport { Section, ContactsTitle, ContactsWrapper, BtnWrapper, FormButton } from \"../Contacts/Contacts.styled\";\n\nconst FavoriteContacts = () => {\n    const isOpenFilter = useSelector(selectOpenFilter);\n    const error = useSelector(selectError);\n    const loading = useSelector(selectIsLoading);\n    \n    const dispatch = useDispatch();\n    const toggle = () => {\n        dispatch(toggleFilterAction());\n    }\n\n    return (\n        <>\n            {loading && !error ? <Loader /> : (\n                <Section>\n                    <ContactsWrapper>\n                        <ContactsTitle>Favorite contacts</ContactsTitle>\n                        <BtnWrapper>\n                            <FormButton type=\"button\" onClick={toggle} isOpen={isOpenFilter}>{isOpenFilter ? 'Close' : 'Find a contact'}</FormButton>\n                          \n                        </BtnWrapper>\n                        {isOpenFilter && (<Filter />)}\n                        <FavoriteList />\n                        {error && <div> Something went wrong! Please try again! </div>}\n                    </ContactsWrapper>\n                </Section>\n            )}\n        </>\n    );\n};\n\nexport default FavoriteContacts;"],"names":["dispatch","useDispatch","modal","useSelector","selectModal","filtredContacts","selectFilteredContacts","favoriteContacts","filter","contact","favorite","editContact","id","setModal","removeContact","deleteContact","Notify","error","useState","favoriteStatus","setFavoriteStatus","useEffect","initialFavoriteStatus","forEach","_id","localStorage","getItem","handleHeartClick","contactId","updatedFavoriteStatus","updatedFavorite","addToFavorite","setItem","toString","length","map","name","email","phone","ContactItem","Modal","isOpenFilter","selectOpenFilter","selectError","loading","selectIsLoading","Loader","type","onClick","toggleFilterAction","isOpen","Filter"],"sourceRoot":""}