{"version":3,"file":"static/js/888.ab1acd97.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/EditModal/EditModal.styled.jsx","components/EditModal/EditModal.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/Contacts/Contacts.styled.jsx","redux/phonebook/selectors.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { FaUserCircle } from 'react-icons/fa';\nimport { BsTrash} from 'react-icons/bs'; \nimport { FiEdit } from 'react-icons/fi';\nimport { AiOutlinePhone } from 'react-icons/ai';\nimport { MdAlternateEmail } from 'react-icons/md'; \nimport {FaRegHeart, FaHeart} from 'react-icons/fa';\n\nexport const ItemUser = styled.li` \ndisplay: flex; \nalign-items: center;\npadding: 10px;\nfont-size: 24px;\ncolor: ${props => props.theme.colors.primaryDarkText};\nborder: 1px solid rgb(200, 200, 200);\nborder-radius: 10px;\ncursor: pointer;\ntransition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover,\n&:focus {\n  border-color:${props => props.theme.colors.normalDark};\n  }\n`;\n\nexport const ContactWrapper = styled.div`\ndisplay: flex;\nflex: 1;\nflex-direction: column;\nalign-items: flex-start;\ngap: 10px;\ncolor: ${props => props.theme.colors.primaryDarkText};\n@media screen and (max-width: 479px) {\n  font-size: 20px;\n  }\n`; \n\nexport const ContactLabel = styled.div`\ndisplay: flex; \n`; \n\nexport const UserIcon = styled(FaUserCircle)`\npadding: 3px;\nborder: 1px solid black;\nborder-radius: 50%;\nborder-color: ${props => props.theme.colors.primaryDarkText};\nmargin-right: 10px;\nfill: ${props => props.theme.colors.primaryDarkText}\nfont-size: 20px;\n`; \n\nexport const EmailIcon = styled(MdAlternateEmail)`\npadding: 3px;\nborder: 1px solid black;\nborder-radius: 50%;\nmargin-right: 10px;\nborder-color: ${props => props.theme.colors.primaryDarkText};\nfill: ${props => props.theme.colors.primaryDarkText}\nfont-size: 20px;\n`;\n\nexport const PhoneIcon = styled(AiOutlinePhone)`\npadding: 3px;\nborder: 1px solid black;\nborder-radius: 50%;\nmargin-right: 10px;\nborder-color: ${props => props.theme.colors.primaryDarkText};\nfill: ${props => props.theme.colors.primaryDarkText};\nfont-size: 20px;\n`;\n\nexport const ButtonWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\nalign-items: center;\n`;\n\n\nexport const ContactsButton = styled.button`\n  padding: 0;\n  align-items: center;\n  border: none; \n  justify-content: center;\n  background-color: transparent;\n  transition: all 100ms linear;\n  cursor: pointer;\n`;\n\nexport const HeartIcon = styled(FaRegHeart)`\nfill: ${props => props.theme.colors.primaryDarkText};\nfont-size: 24px;\n\n  &:hover,\n  &:active {\n    fill: #c95366;\n  }\n      @media screen and (max-width: 479px) {\n  font-size: 22px;\n  }\n`;\n\nexport const FilledHeartIcon = styled(FaHeart)`\nfill: #c95366;\nfont-size: 24px;\n\n  &:active {\n    fill: #c95366;\n  }\n      @media screen and (max-width: 479px) {\n  font-size: 22px;\n  }\n`;\n\nexport const EditIcon = styled(FiEdit)`\ncolor: ${props => props.theme.colors.primaryDarkText};\nfont-size: 26px;\n\n&:hover {\n  color: green;\n  border-color: green;\n  }\n    @media screen and (max-width: 479px) {\n  font-size: 22px;\n  }\n`\n\nexport const DeleteIcon = styled(BsTrash )`\nfill: ${props => props.theme.colors.primaryDarkText};\nfont-size: 28px;\n&:hover {\n  fill: red;\n  border-color: red;\n  }\n\n  @media screen and (max-width: 479px) {\n  font-size: 22px;\n\n  }\n`; \n","import React from 'react';\n\nimport {\n    ItemUser,\n    ContactWrapper,\n    ContactLabel,\n    UserIcon,\n    EmailIcon,\n    PhoneIcon,\n    ButtonWrapper,\n    EditIcon,\n    DeleteIcon,\n    HeartIcon,\n    FilledHeartIcon,\n    ContactsButton\n} from './ContactItem.styled'\n\nconst ContactItem = ({\n    _id,\n    name,\n    email,\n    phone,\n    favoriteStatus,\n    editContact,\n    removeContact,\n    handleHeartClick\n}) => {\n    return (\n        <ItemUser key={_id}>\n            <ContactWrapper>\n                <ContactLabel>\n                    <UserIcon />\n                    <span>{name}</span>\n                </ContactLabel>\n                <ContactLabel>\n                    <EmailIcon />\n                    <span>{email}</span>\n                </ContactLabel>\n                <ContactLabel>\n                    <PhoneIcon />\n                    <span>{phone}</span>\n                </ContactLabel>\n            </ContactWrapper>\n            <ButtonWrapper>\n                <ContactsButton type='button' onClick={() => handleHeartClick(_id)}>\n                    {favoriteStatus ? <FilledHeartIcon /> : <HeartIcon />}\n                </ContactsButton>\n                <EditIcon onClick={() => editContact(_id)} />\n                <DeleteIcon onClick={() => removeContact(_id)} />\n            </ButtonWrapper>\n        </ItemUser>\n    ); \n}; \n\nexport default ContactItem;","import styled from \"@emotion/styled\";\n\nimport noContact from '../../pictures/noContacts.png';\n\n\n\nexport const ContactList = styled.ul` \n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 5px;\n`;\n\nexport const NoContactsBox = styled.div`\n    display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`; \n\nexport const NoContactsImg = styled.span`\n background-image: url(${noContact});\n  background-size: contain;\n  opacity: 0.30;\n  border: none; \n  width: 160px;\n  height: 160px; \n`;\n\n\nexport const NoContactsText = styled.p`\n  color: ${props => props.theme.colors.primaryDarkText};\n  font-size: 18px;\n  font-weight: 500;\n  margin-top: 20px;\n  text-align: center; \n`; ","import styled from \"@emotion/styled\";\nimport { FiSearch } from 'react-icons/fi';\n\nexport const Icon = styled(FiSearch)`\nposition: absolute;\ntop: 15px;\nleft: 10px;\nfont-size: 20px; \nmargin: 0;\npadding: 10px;\ncolor: ${props => props.theme.colors.normalDark};\nalign-items: center;\n`;\n\nexport const FilterWrapper = styled.div`\nposition: relative;\ntext-align: start;\nbackground: transparent;\n`;\n\n\nexport const Input = styled.input`\nwidth: 320px;\nheight: 45px;\nfont-size: 20px;\npadding-left: 37px;\nmargin-top: 10px;\nmargin-left: 10px;\ncolor: ${props => props.theme.colors.primaryDarkText}; \nbox-shadow: rgba(17, 12, 46, 0.15) 0px 48px 100px 0px;\nbackground: transparent; \nborder: 1px solid #ccc;\nborder-radius: 8px;\noutline: none;\n:focus {\n    border-color: ${props => props.theme.colors.orangeAccent};\n  }\n\n    @media screen and (max-width: 400px) {\n  width: 90%;\n  font-size: 18px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFilter } from 'redux/phonebook/selectors';\nimport { setFilter } from 'redux/phonebook/sliceFilter';\n\nimport { FilterWrapper, Input, Icon, } from './Filter.styled';\n\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    const onChangeFilter = e => {\n        dispatch(setFilter(e.currentTarget.value))\n    };\n    return (\n        <FilterWrapper>\n            <Icon />\n            <Input onChange={onChangeFilter} name=\"filter\" type=\"text\" placeholder='Type in the name' value={filter}></Input>\n        </FilterWrapper>\n    );\n}; \n\nexport default Filter; ","import styled from \"@emotion/styled\";\nimport { Field, ErrorMessage, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\ngap: 20px;\nwidth: 100%;\nmargin: 0 auto;\nbackground-color: transparent;\ntext-align: center;\n`; \n\nexport const Title = styled.h2`\nmargin: 0;\npadding: 0;\ntext-align: center;\nfont-weight: 600;\n color: ${props => props.theme.colors.primaryDarkText};\nfont-family: ${props => props.theme.fonts.primary};\nfont-size: 22px;\n      @media screen and (min-width: 380px) {\n      font-size: 26px;\n  }\n`;\n\nexport const FormBox = styled.div`\n display: flex; \n flex-direction: column;\n margin-top: 18px;\n margin-bottom: 10px;\n text-align: start;\n`; \n\nexport const Label = styled.label`\nfont-family: ${props => props.theme.fonts.primary};\n display: flex;\n flex-direction: column;\n font-weight: 500;\n color: ${props => props.theme.colors.primaryDarkText};\n      @media screen and (min-width: 768px) {\n      font-size: 20px;\n  }\n :not(:last-child) {\n    margin-bottom: 20px;\n\n  }\n`;\n\nexport const Input = styled(Field)`\nfont-family: ${props => props.theme.fonts.primary};\nfont-size: 20px;\npadding: 10px 15px;\nmargin-top: 5px;\n background: transparent;\n  color: ${props => props.theme.colors.primaryDarkText};\nborder: 2px solid #ccc;\nborder-radius: 5px;\noutline: none;\n@media screen and (min-width: 1016px) {\n  padding: 15px 20px;\n  }\n:focus {\n    border-color: ${props => props.theme.colors.normalDark};\n    transform: scale(1.05);\n  }\n    &:hover {\n    border-color: ${props => props.theme.colors.normalDark};\n    \n  } \n`;\n\nexport const Error = styled(ErrorMessage)`\nmargin-top: 5px;\nfont-size: 14px;\ncolor: red;\n`; \n\nexport const Button = styled.button`\n  font-family: ${props => props.theme.fonts.primary};\n  border: none;\ntext-align: center;\n  margin-left: 10px; \n  margin-top: 20px;\n  padding: 15px 20px;\n  font-size: 20px;\n  font-weight: 500;\n  background-color: ${props => props.theme.colors.normalDark};\n  border-radius: 4px;\n  box-shadow: ${props => props.theme.colors.lightBlue} 2px 2px;\n  white-space: nowrap;\n  overflow: hidden;\n  color: white;\n  text-overflow: ellipsis;\n  transition: background-color 0.2s ease;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: ${props => props.theme.colors.normalDark} 0 -25px 18px -14px inset, #79cfefb3 0 1px 2px;\n    transform: scale(1.05);\n  }\n`; \n\n\n","import { Formik } from \"formik\";\nimport * as yup from 'yup'; \nimport { Notify } from \"notiflix\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setModal } from \"redux/phonebook/sliceModal\";\nimport { editContact } from \"redux/phonebook/operations\";\nimport { selectContacts, selectId } from \"redux/phonebook/selectors\";\n\nimport { FormStyled, Title, FormBox, Label, Input, Button, Error} from \"./EditModal.styled\";\n\n\nconst namePattern = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst emailRegExp = /^\\w+([.-]?\\w+){2}@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\nconst numberPattern = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n    name: yup.string().matches(namePattern, \"Name is not valid\").required(),\n    email: yup.string().matches(emailRegExp, 'Your email must be valid').lowercase().required(),\n    phone: yup.string().min(6).max(24).matches(numberPattern, 'Phone number is not valid').required(),\n});\n\n\nconst EditModal = () => {\n\n    const contacts = useSelector(selectContacts);\n    const contactId = useSelector(selectId);\n\n    const dispatch = useDispatch();\n    const contactData = contacts.find(({ _id }) => _id === contactId);\n    const { _id, name, email, phone } = contactData;\n    \n    const initialValues = {\n        name: name,\n        email: email,\n        phone: phone,\n    };\n\n    const handleSubmit = values => {\n\n        try {\n            dispatch(editContact({ _id, contact: values }));\n            dispatch(setModal());\n            Notify.success(`Contact was successfully edited`);\n        }\n        catch (error) {\n            Notify.error(`Something went wrong`);\n        }\n    };\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n        >\n            <FormStyled autoComplete='off'>\n                <Title> Make changes 👇 </Title>\n                <FormBox>\n                    <Label htmlFor='name'>\n                        Name\n                        <Input\n                            id='name'\n                            type='text'\n                            name='name'\n                            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        />\n                        <Error name='name' component='div' />\n                    </Label>\n                    <Label htmlFor='email'>\n                        Email\n                        <Input\n                            id='email'\n                            type='text'\n                            name='email'\n                            title=\"Please enter a valid email address\"\n                        />\n                        <Error name='email' component='div' />\n                    </Label>\n                    <Label htmlFor='phone'>\n                        Number\n                        <Input\n                            id='phone'\n                            type='tel'\n                            name='phone'\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        />\n                        <Error name='phone' component='div' />\n                    </Label>\n                </FormBox>\n                <Button type=\"submit\">Save changes</Button>\n            </FormStyled>\n        </Formik>\n    );\n}; \n\nexport default EditModal;","import styled from \"@emotion/styled\";\nimport { IoMdClose} from 'react-icons/io';\n\nexport const CloseIcon = styled(IoMdClose)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  width: 34px;\n  height: 34px;\n  right: 18px;\n  top: 18px;\n  font-weight: 600;\n  border: none; \n  cursor: pointer;\n  text-align: center;\n  color: ${props => props.theme.colors.normalDark};\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n  color: red;\n  }\n`;\n\nexport const Backdrop = styled.div`\nposition: fixed;\ntop: 0;\nleft: 0;\nwidth: 100%;\nheight: 100%;\nbackground-color: rgba(0, 0, 0, 0.4);\n`; \n\nexport const ModalContainer = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\npadding: 50px;\nwidth: 60%;\nbackground-color: ${props => props.theme.colors.modal};\nborder-radius: 30px;\ntransform: translate(-50%, -50%) scale(1);\n@media screen and (min-width: 768px) {\n    padding: 70px;\n    width: 50%;\n}\n`; \n\n// export const CloseButton = styled.button`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   position: absolute;\n//   width: 44px;\n//   height: 44px;\n//   right: 18px;\n//   top: 18px;\n//   font-size: 28px;\n//   font-weight: 600;\n//   background: transparent; \n//   border: none; \n//   cursor: pointer;\n// `;\n","import { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { setModal } from 'redux/phonebook/sliceModal';\nimport EditModal from 'components/EditModal';\n\nimport { Backdrop, ModalContainer, CloseIcon } from './Modal.styled';\n\n\nconst Modal = () => {\n    const dispatch = useDispatch();\n\n    const onBtnClick = () => {\n            dispatch(setModal());\n    };\n\n    return createPortal(\n        <Backdrop>\n            <ModalContainer>\n                <CloseIcon onClick={onBtnClick}/>\n                <EditModal />\n            </ModalContainer>\n        </Backdrop>,\n        document.querySelector('#modal-root')\n    );\n}; \n\nexport default Modal; ","import styled from \"@emotion/styled\"; \n\nexport const Section = styled.div`\n  padding: 0;\n  width: 100%; \n`;\n\nexport const ContactsTitle = styled.h2`\n text-align: center;\n color:  ${props => props.theme.colors.primaryDarkText};\nfont-size: 24px;\nmargin: 0;\n  @media screen and (min-width: 480px) {\nfont-size: 28px; \n  }\n`;\n\nexport const ContactsWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nwidth: 100%;\nmargin: 0 auto;\nbackground-color: transparent;\nborder-radius: 15px;\n`; \n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  @media screen and (min-width: 480px) {\n    justify-content: start;\n  }\n`\n\nexport const FormButton = styled.button`\n border: none;\n  text-align: center;\n  padding: 10px 20px;\n  margin-left: 0;\n   margin-top: 10px;\n  font-size: 17px;\n  line-height: 27px;\n  background: ${props => props.theme.colors.normalDark};\n  color: white; \n  border-radius: 4px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transition: all 0.2s ease;\n  outline: none;\n  cursor: pointer;\n  box-shadow: none;\n  box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\n\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: ${props => props.theme.colors.primaryDarkText} 0px 12px 30px -12px;\n  }\n\n  &.active {\n    outline: none;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;\n  }\n\n    @media screen and (min-width: 480px) {\n       margin-top: 0;\n      margin-left: 10px;\n  }\n`;\n\n\n\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items; \nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.value; \nexport const selectOpenFilter = state => state.filter.isOpen; \nexport const selectOperation = state => state.contacts.operation; \nexport const selectModal = state => state.modal.isModalOpen; \nexport const selectId = state => state.modal.id; \nexport const selectOpenForm = state => state.form.isOpen;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!Array.isArray(contacts)) {\n      return [];\n    }\n    \n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);"],"names":["ItemUser","styled","props","theme","colors","primaryDarkText","normalDark","ContactWrapper","ContactLabel","UserIcon","FaUserCircle","EmailIcon","MdAlternateEmail","PhoneIcon","AiOutlinePhone","ButtonWrapper","ContactsButton","HeartIcon","FaRegHeart","FilledHeartIcon","FaHeart","EditIcon","FiEdit","DeleteIcon","BsTrash","_id","name","email","phone","favoriteStatus","editContact","removeContact","handleHeartClick","type","onClick","ContactList","NoContactsBox","NoContactsImg","noContact","NoContactsText","Icon","FiSearch","FilterWrapper","Input","orangeAccent","dispatch","useDispatch","filter","useSelector","selectFilter","onChange","e","setFilter","currentTarget","value","placeholder","FormStyled","Form","Title","fonts","primary","FormBox","Label","Field","Error","ErrorMessage","Button","lightBlue","schema","yup","shape","matches","required","lowercase","min","max","contacts","selectContacts","contactId","selectId","contactData","find","initialValues","validationSchema","onSubmit","values","contact","setModal","Notify","error","autoComplete","htmlFor","id","title","component","CloseIcon","IoMdClose","Backdrop","ModalContainer","modal","createPortal","document","querySelector","Section","ContactsTitle","ContactsWrapper","BtnWrapper","FormButton","state","items","selectIsLoading","isLoading","selectError","selectOpenFilter","isOpen","selectOperation","operation","selectModal","isModalOpen","selectFilteredContacts","createSelector","Array","isArray","toLowerCase","includes"],"sourceRoot":""}